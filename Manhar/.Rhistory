knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(janitor)
library(here)
library(naniar)
library(skimr)
covid <- read.csv("Data/WHO-COVID-19-global-data.csv")
covid <- read.csv("BIS15W2021_Group_8/Data/WHO-COVID-19-global-data.csv")
getwd()
covid <- read.csv("BIS15W2021_Group_8/Data/WHO-COVID-19-global-data.csv")
covid <- read.csv("BIS15W2021_Group_8/Data/WHO-COVID-19-global-data.csv")
getwd()
covid <- read.csv("Data/WHO-COVID-19-global-data.csv")
covid<-janitor::clean_names(covid)
View(covid)
names(covid)
library("shiny")
library("shinydashboard")
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
), # close the first box
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
) # close the second box
) # close the row
) # close the dashboard body
) # close the ui
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(penguins, aes_string(x = input$x, y = input$y, color="species")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(covid, aes_string(x = input$x, y = input$y, color="species")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(covid, aes_string(x = input$x, y = input$y, color="country")) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(covid, aes_string(x = input$x, y = input$y)) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
install.packages("lubridate")
install.packages("lubridate")
options(scipen = 999)
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(covid, aes_string(x = input$x, y = input$y)) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
selectInput(choices=c("country")),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(covid, aes_string(x = input$x, y = input$y)) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
covid%>%
ggplot(aes(x=i_date_reported, y=new_cases)) + geom_point()
covid%>%
filter(i_date_reported == "1/3/2020")%>%
ggplot(aes(x=i_date_reported, y=new_cases)) + geom_point()
covid%>%
filter(i_date_reported == "1/3/2020", i_date_reported == "7/7/2020")%>%
ggplot(aes(x=i_date_reported, y=new_cases)) + geom_point()
covid%>%
filter(i_date_reported == "1/3/2020" | i_date_reported == "7/7/2020")%>%
ggplot(aes(x=i_date_reported, y=new_cases)) + geom_point()
ui <- dashboardPage(
dashboardHeader(title = "Covid-19"),
dashboardSidebar(disable = T),
dashboardBody(
fluidRow(
box(title = "Plot Options", width = 3,
selectInput("x", "Select X Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "i_date_reported"),
selectInput("y", "Select Y Variable", choices = c("i_date_reported", "new_cases", "cumulative_cases", "new_deaths", "cumulative_deaths"), selected = "cumulative_cases"),
sliderInput("pointsize", "Select the Point Size", min = 1, max = 5, value = 2, step = 0.5)
),
box(title = "Plot of Covid-19 cases and deaths", width = 7,
plotOutput("plot", width = "600px", height = "500px")
)
)
)
)
server <- function(input, output, session) {
output$plot <- renderPlot({
ggplot(covid, aes_string(x = input$x, y = input$y)) + geom_point(size=input$pointsize, alpha=0.8) + theme_light(base_size = 18)
})
session$onSessionEnded(stopApp)
}
shinyApp(ui, server)
